// Auto-generated. Do not edit!

// (in-package rll_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;
let JobStatus = require('./JobStatus.js');
let JobExtraField = require('./JobExtraField.js');

//-----------------------------------------------------------

class JobEnvResult {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.job = null;
      this.job_data = null;
    }
    else {
      if (initObj.hasOwnProperty('job')) {
        this.job = initObj.job
      }
      else {
        this.job = new JobStatus();
      }
      if (initObj.hasOwnProperty('job_data')) {
        this.job_data = initObj.job_data
      }
      else {
        this.job_data = [];
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type JobEnvResult
    // Serialize message field [job]
    bufferOffset = JobStatus.serialize(obj.job, buffer, bufferOffset);
    // Serialize message field [job_data]
    // Serialize the length for message field [job_data]
    bufferOffset = _serializer.uint32(obj.job_data.length, buffer, bufferOffset);
    obj.job_data.forEach((val) => {
      bufferOffset = JobExtraField.serialize(val, buffer, bufferOffset);
    });
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type JobEnvResult
    let len;
    let data = new JobEnvResult(null);
    // Deserialize message field [job]
    data.job = JobStatus.deserialize(buffer, bufferOffset);
    // Deserialize message field [job_data]
    // Deserialize array length for message field [job_data]
    len = _deserializer.uint32(buffer, bufferOffset);
    data.job_data = new Array(len);
    for (let i = 0; i < len; ++i) {
      data.job_data[i] = JobExtraField.deserialize(buffer, bufferOffset)
    }
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += JobStatus.getMessageSize(object.job);
    object.job_data.forEach((val) => {
      length += JobExtraField.getMessageSize(val);
    });
    return length + 4;
  }

  static datatype() {
    // Returns string type for a message object
    return 'rll_msgs/JobEnvResult';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '0a9a79cbd2a58e892938423b28bbc283';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    JobStatus job
    JobExtraField[] job_data
    
    ================================================================================
    MSG: rll_msgs/JobStatus
    uint8 status
    uint8 SUCCESS = 0
    uint8 FAILURE = 1
    uint8 INTERNAL_ERROR = 2
    string status_detail
    
    ================================================================================
    MSG: rll_msgs/JobExtraField
    string description
    float32 value
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new JobEnvResult(null);
    if (msg.job !== undefined) {
      resolved.job = JobStatus.Resolve(msg.job)
    }
    else {
      resolved.job = new JobStatus()
    }

    if (msg.job_data !== undefined) {
      resolved.job_data = new Array(msg.job_data.length);
      for (let i = 0; i < resolved.job_data.length; ++i) {
        resolved.job_data[i] = JobExtraField.Resolve(msg.job_data[i]);
      }
    }
    else {
      resolved.job_data = []
    }

    return resolved;
    }
};

module.exports = JobEnvResult;
