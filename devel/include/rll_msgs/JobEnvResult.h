// Generated by gencpp from file rll_msgs/JobEnvResult.msg
// DO NOT EDIT!


#ifndef RLL_MSGS_MESSAGE_JOBENVRESULT_H
#define RLL_MSGS_MESSAGE_JOBENVRESULT_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <rll_msgs/JobStatus.h>
#include <rll_msgs/JobExtraField.h>

namespace rll_msgs
{
template <class ContainerAllocator>
struct JobEnvResult_
{
  typedef JobEnvResult_<ContainerAllocator> Type;

  JobEnvResult_()
    : job()
    , job_data()  {
    }
  JobEnvResult_(const ContainerAllocator& _alloc)
    : job(_alloc)
    , job_data(_alloc)  {
  (void)_alloc;
    }



   typedef  ::rll_msgs::JobStatus_<ContainerAllocator>  _job_type;
  _job_type job;

   typedef std::vector< ::rll_msgs::JobExtraField_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::rll_msgs::JobExtraField_<ContainerAllocator> >::other >  _job_data_type;
  _job_data_type job_data;





  typedef boost::shared_ptr< ::rll_msgs::JobEnvResult_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rll_msgs::JobEnvResult_<ContainerAllocator> const> ConstPtr;

}; // struct JobEnvResult_

typedef ::rll_msgs::JobEnvResult_<std::allocator<void> > JobEnvResult;

typedef boost::shared_ptr< ::rll_msgs::JobEnvResult > JobEnvResultPtr;
typedef boost::shared_ptr< ::rll_msgs::JobEnvResult const> JobEnvResultConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::rll_msgs::JobEnvResult_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::rll_msgs::JobEnvResult_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace rll_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/kinetic/share/actionlib_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'rll_msgs': ['/home/robond/kuka_arm/src/rll_sdk/rll_msgs/msg', '/home/robond/kuka_arm/devel/share/rll_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::rll_msgs::JobEnvResult_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::rll_msgs::JobEnvResult_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::rll_msgs::JobEnvResult_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::rll_msgs::JobEnvResult_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::rll_msgs::JobEnvResult_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::rll_msgs::JobEnvResult_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::rll_msgs::JobEnvResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "0a9a79cbd2a58e892938423b28bbc283";
  }

  static const char* value(const ::rll_msgs::JobEnvResult_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x0a9a79cbd2a58e89ULL;
  static const uint64_t static_value2 = 0x2938423b28bbc283ULL;
};

template<class ContainerAllocator>
struct DataType< ::rll_msgs::JobEnvResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "rll_msgs/JobEnvResult";
  }

  static const char* value(const ::rll_msgs::JobEnvResult_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::rll_msgs::JobEnvResult_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
JobStatus job\n\
JobExtraField[] job_data\n\
\n\
================================================================================\n\
MSG: rll_msgs/JobStatus\n\
uint8 status\n\
uint8 SUCCESS = 0\n\
uint8 FAILURE = 1\n\
uint8 INTERNAL_ERROR = 2\n\
string status_detail\n\
\n\
================================================================================\n\
MSG: rll_msgs/JobExtraField\n\
string description\n\
float32 value\n\
";
  }

  static const char* value(const ::rll_msgs::JobEnvResult_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::rll_msgs::JobEnvResult_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.job);
      stream.next(m.job_data);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct JobEnvResult_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::rll_msgs::JobEnvResult_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::rll_msgs::JobEnvResult_<ContainerAllocator>& v)
  {
    s << indent << "job: ";
    s << std::endl;
    Printer< ::rll_msgs::JobStatus_<ContainerAllocator> >::stream(s, indent + "  ", v.job);
    s << indent << "job_data[]" << std::endl;
    for (size_t i = 0; i < v.job_data.size(); ++i)
    {
      s << indent << "  job_data[" << i << "]: ";
      s << std::endl;
      s << indent;
      Printer< ::rll_msgs::JobExtraField_<ContainerAllocator> >::stream(s, indent + "    ", v.job_data[i]);
    }
  }
};

} // namespace message_operations
} // namespace ros

#endif // RLL_MSGS_MESSAGE_JOBENVRESULT_H
